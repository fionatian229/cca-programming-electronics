function move(d, s) {
	// d means movement direction
	// s means steps to move

	var steps = 0;

	if (d == "up") {
		while (steps < s) {
			up
			steps = steps + 1
		} 
	}

	if (d == "down") {
		while (steps < s) {
			down
			steps = steps + 1
		} 
	}

	if (d == "left") {
		while (steps < s) {
			left
			steps = steps + 1
		} 
	}

	if (d == "right") {
		while (steps < s) {
			right
			steps = steps + 1
		} 
	}
}


// Puzzle 1
move("down", 7)
move("right", 5)
move("up", 2)
var p1Color1 = getColor
move("right", 2)
var p1Color2 = getColor

// Puzzle 2
move("down", 6)
move("right", 3)
move("up", 2)
move("right", 2)
move("down", 1)
var p2Color1 = getColor
move("down", 2)
var p2Color2 = getColor

/ Puzzle 3
move(“down”, 2)
var p3Color1 = getColor

if (p3Color1 == “blue”) { 
    move(“down”, 3)
    move(“right”, 2)
}

if (p3Color1 == “yellow”) { 
    move(“down”, 3)
    move(“right”, 2)
}

if (p3Color1 == “pink”) { 
    move(“down”, 3)
    move(“right”, 2)
}

if (setColor(p3Color1)) {
    move(“right”, 2)
    move(“up”, 1)    
}

// Puzzle 4
move("down", 4)
move("right",1)
var p4Color1 = getColor

if (p4Color1 == "green"){
	move("down", 1)
}

if (p4Color1 == "blue"){
	move("down", 1)
}

if (p4Color1 == "pink"){
	move("down", 1)
}

if (setColor(p4Color1)){
	move("right", 2)
}
move("up", 1)
move("right", 1)
if (p4Color2 == "yellow"){
	move("down",1)
}
if (p4Color2 == "green"){
	move("down",1)
}
if (p4Color2 == "blue"){
	move("down",1)
}

if(setColor(p4Color2)){
	move("right",2)
}
// Puzzle 5
function checkColor(color) {
    if (color == “blue”) {
        move(“down”, 1)
    }
    if (color == “pink”) {
        move(“up”, 1)
    }
}

move(“right”, 2)
var p5Color1 = getColor
checkColor(p5Color1)




move(“right”, 2)
var p5Color2 = getColor
checkColor(p5Color2)

move(“right”, 2)
var p5Color3 = getColor
checkColor(p5Color3)

move(“right”, 3)


// Puzzle 6
move ("right", 1)
var p6Color1 = getColor
if (p6Color1 == “pink”) {
    move(“up”, 3)
}
if (p6Color1 == “blue”) {
    move(“down”, 3)
}

var p6Color2 = getColor
if (p6Color2 == “pink”) {
    move(“left”, 1)
}
if (p6Color2 == “blue”) {
    move(“right”, 1)
}
if (p6color1 =="pink"){
	move("up",1)
}
if (p6color1 =="blue"){
	move("down",1)
}

// Puzzle 7 
var maxSteps = 9
var p7Steps = 0

while (p7Steps < maxSteps){
	if (getColor == "pink"){
		move("right", 2)
		p7Steps = maxSteps
	}
	else {
		move("down", 1)
		p7Steps = p7Steps + 1
	}
}

p7Steps = 0
while (p7Steps < maxSteps){
	if (getColor == "pink"){
		move("right", 2)
		p7Steps = maxSteps
	}
	else {
		move("up", 1)
		p7Steps = p7Steps + 1
	}
}

p7Steps = 0
while (p7Steps < maxSteps){
	if (getColor == "pink"){
		move("right", 2)
		p7Steps = maxSteps
	}
	else {
		move("down", 1)
		p7Steps = p7Steps + 1
	}
}

p7Steps = 0
while (p7Steps < maxSteps){
	if (getColor == "pink"){
		move("right", 2)
		p7Steps = maxSteps
	}
	else {
		move("up", 1)
		p7Steps = p7Steps + 1
	}
}

p7Steps = 0
while (p7Steps < maxSteps){
	if (getColor == "pink"){
		move("right", 1)
		p7Steps = maxStepsk
	}
	else {
		move("down", 1)
		p7Steps = p7Steps + 1
	}
}




// Puzzle 8
var p8MaxSteps = 8
var p8Steps = 0

while (p8Steps < p8MaxSteps){
	
	move("down", 1)
	p8Steps = p8Steps + 1
	if (p8Steps == p8MaxSteps){
		move("right", 2)
	}

}

p8Steps = 0
while (p8Steps < p8MaxSteps){
	
	move("up", 1)
	p8Steps = p8Steps + 1
	if (p8Steps == p8MaxSteps){
		move("right", 2)
	}

}

p8Steps = 0
while (p8Steps < p8MaxSteps){
	
	move("down", 1)
	p8Steps = p8Steps + 1
	if (p8Steps == p8MaxSteps){
		move("right", 2)
	}

}

p8Steps = 0
while (p8Steps < p8MaxSteps){
	
	move("up", 1)
	p8Steps = p8Steps + 1
	if (p8Steps == p8MaxSteps){
		move("right", 2)
	}

}

p8Steps = 0
while (p8Steps < p8MaxSteps){
	
	move("down", 1)
	p8Steps = p8Steps + 1
	if (p8Steps == p8MaxSteps){
		move("right", 1)
	}

}


// Puzzle 9
var borderColor = “pink”
var borderLength = 10
var stepCounter = 0

while (stepCounter < borderLength) {
    move(“right”, 1)
    setColor(“borderColor”)
    steps = steps + 1    
}

steps = 0
while (steps < borderLength) {
    move(“down”, 1)
    setColor(“borderColor”)
    steps = steps + 1    
}

steps = 0
while (steps < borderLength) {
    move(“left”, 1)
    setColor(“borderColor”)
    steps = steps + 1    
}

steps = 0
while (steps < borderLength) {
    move(“up”, 1)
    setColor(“borderColor”)
    steps = steps + 1    
}

